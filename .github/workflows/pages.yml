# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to GitHub Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the main branch
  push:
    # TODO - revert back to just `main`
    branches: [ main, develop ]

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
        ref: main
    
    - name: Set up Python 3.
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install Python dependencies
      run: |
        pip install sphinx
        pip install sphinx-rtd-theme

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    
    - name: Build phenopacket-tools
      run: ./mvnw -Prelease clean package

#    - name: Get CLI JAR file
#      id: cli-jar
#      uses: ielis/Path-lister-action@try_pattern
#      with:
#          path: "phenopacket-tools-cli/target/"
#          # The pattern should match two types of inputs:
#          #  - bla-bla-1.2.3.jar          (release)
#          #  - bla-bla-1.2.3-SNAPSHOT.jar (snapshot)
#          # Using named groups below in attempt to improve legibility.
#          regex: ".*(?P<semantic_version>\\d\\.\\d\\.\\d)(?P<snapshot>-SNAPSHOT)?\\.jar$"

#    - name: Output results
#      id: jar-file
#      run: |
#        echo "Found ${{ steps.cli-jar.outputs.path_count }} file(s) with this extension:"
#        for i in ${{ steps.cli-jar.outputs.paths }}; do
#        echo $i
#        done

    - name: Generate examples and build documentation
      run: |
        # Init the target folder. 
        # We will put all site documentation there.
        mkdir -p gh-pages
        touch gh-pages/.nojekyll
        
        # Generate examples
        # Find the CLI jar and run the `examples` command.
        pxfcli="phenopacket-tools-cli"
        find ${pfxcli}/target \
             -regex "^${pxfcli}/target/${pxfcli}-[0-9]\.[0-9]\.[0-9]\(-SNAPSHOT\)?\.jar$" \
             -exec java -jar {} examples --output gh-pages/examples \;
        # java -jar ${{ steps.cli-jar.outputs.paths }} examples
        # make yaml-docs -B
        # mkdir gh-pages gh-pages/examples
        
        # Build the docs
        # Generate the HTML pages and move the generated content into the target folder. 
        cd docs/ 
        # sphinx-build -b html . _build
        make html
        mv _build/* ../gh-pages/
        cd ..
        # cp -r _build/* ../gh-pages/
        # cp -r yaml/* ../gh-pages/examples
        #

# TODO - re-enable
#    - name: Deploy documentation.
#      if: ${{ github.event_name == 'push' }}
#      uses: JamesIves/github-pages-deploy-action@v4.3.0
#      with:
#        branch: gh-pages
#        force: true
#        folder: gh-pages


